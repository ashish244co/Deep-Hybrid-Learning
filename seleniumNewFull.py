# -*- coding: utf-8 -*-
"""SeleniumR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yAXMYeZ2R0_NSO7gzZLTwcENTglLtCt6
"""

chromeDriver='chromedriver'



from selenium import webdriver
from selenium.webdriver.common.keys import Keys

driver=webdriver.Chrome(chromeDriver)

import pandas as pd

from time import gmtime, strftime
strftime("%a, %d %b %Y %H:%M:%S +0000", gmtime())

import time
timeForLogin1=[]
error1=[]
timeForLobby1=[]
startTime1=[]
t1=[]
timeForLogin2=[]
timeForLobby2=[]
error2=[]
startTime2=[]
t2=[]

for _ in range(100):
    try:
        time.sleep(1800)
        driver=webdriver.Chrome(chromeDriver)
        
        
        start=strftime("%a, %d %b %Y %H:%M:%S +0000", gmtime())
        startLogin = time.time()
        startTime1.append(start)
        driver.get('https://onlinexperiences.com/scripts/Server.nxp?LASCmd=L:0&AI=1&ShowKey=83097&LoginType=0&InitialDisplay=1&ClientBrowser=0&DisplayItem=NULL&LangLocaleID=0&SSO=1&RFR=https://onlinexperiences.com/Launch/Event.htm?ShowKey=83097')
        startWeb=time.time()
        timeForLogin1.append(startWeb-startLogin)
        stopLogin = time.time()

        x=driver.find_element_by_name('LoginID')
        x.clear()
        x.send_keys("florens.focke@merckgroup.com")
        x.send_keys(Keys.RETURN)
        page=driver.page_source
        #print(page)
        #print('\n')
        string='Video3'
        if(str(page).find(string)):
            now=time.time()
            t1.append(now- startLogin)
            timeForLobby1.append(now-stopLogin)
        else:
            error1.append('Lobby Error')
        error1.append('No')

    except:
        print('error in login')
        error.append('Login Page Error')
        continue
    time.sleep(10)
    driver.close()
        
    zippedList =  list(zip(startTime1, timeForLogin1,timeForLobby1, t1,error1))
    dfObj = pd.DataFrame(zippedList, columns = ['Start Time' , 'Time Taken(Login Page)(s)','Time Taken(Lobby Page)(s)', 'Time Taken(Total)(s)','Error'])  
    dfObj.to_excel('testCongressWebForm.xlsx')


    try:
        page=''
        time.sleep(1800)
        driver=webdriver.Chrome(chromeDriver)
        
        start=strftime("%a, %d %b %Y %H:%M:%S +0000", gmtime())
        startLogin = time.time()
        startTime2.append(start)
        driver.get('https://api.onlinexperiences.com/scripts/Server.nxp?LASCmd=AI:4;F:APIUTILS!50500&APIUserCredentials=notutHUguB0uH2PHey7tlwOZetLSpi&APIUserAuthCode=M7NUwodOJI4uh8p7emL0OdruP0cHar&OpCodeList=CrT& ExternalUserID=testuser-1&EMailAddress=testuser-1%40example.com&TriggerRegistrationEvents=1&ShowKey=83097&ShowPackageKey=163044&Country=Germany&UBMLCPWD=1&FirstName=testuser-1&LastName=testuser-1')
        stoptLogin = time.time()
        passkey=driver.page_source
        driver.get('https://api.onlinexperiences.com/scripts/Server.nxp?LASCmd=AI:4;F:APIUTILS!50505&LoginTicketKey='+passkey[354:390])
        page=driver.page_source
        string='Video3'
        if(str(page).find(string)):
            now=time.time()
            t2.append(now- startLogin)  
            timeForLogin2.append(stoptLogin-startLogin)
            timeForLobby2.append(now-stoptLogin)
        else:
            error2.append('Lobby Error')
        error2.append('No')
    except:
        print('error in login')
        error.append('Login Error')
        continue  
    time.sleep(10)
    driver.close()
        
    zippedList =  list(zip(startTime2,timeForLogin2,timeForLobby2, t2,error2))
    dfObj = pd.DataFrame(zippedList, columns = ['Start Timestamp' ,'Time Taken(Login Page)(s)','Time Taken(Lobby Page)(s)', 'Time Taken(Total)(s)','Error'])         
    dfObj.to_excel('testCongressAPI.xlsx')

#passkey[354:390]

#len('1930C991-3BE4-4822-811C-5EE0787FD7A1')
